services:
  server:
    restart: always
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: bookstore_server
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - POSTGRES_URL=postgresql://postgres:postgres@db:5432/bookstore
    depends_on:
      - db
    networks:
      - bookstore_network

  db:
    image: postgres:13-alpine
    restart: always
    container_name: bookstore_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=bookstore
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - bookstore_network

  client:
    restart: always
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: bookstore_client
    volumes:
      - /app/node_modules
      - ./client:/app
    depends_on:
      - server
    networks:
      - bookstore_network

  nginx:
    restart: always
    depends_on:
      - server
      - client
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    container_name: bookstore_nginx
    ports:
      - 8080:80
    networks:
      - bookstore_network

  node-exporter:
    restart: always
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - 9100:9100
    networks:
      - bookstore_network

  prometheus:
    restart: always
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - bookstore_network
    depends_on:
      - node-exporter

  grafana:
    restart: always
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - bookstore_network
    depends_on:
      - prometheus

  filebeat:
    restart: always
    image: docker.elastic.co/beats/filebeat:latest
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - logstash
    networks:
      - bookstore_network
      
  elasticsearch:
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:latest
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - 9200:9200
    networks:
      - bookstore_network

  logstash:
    restart: always
    image: docker.elastic.co/logstash/logstash:latest
    container_name: logstash
    depends_on:
      - elasticsearch
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    ports:
      - 5001:5001
    networks:
      - bookstore_network

  kibana:
    restart: always
    image: docker.elastic.co/kibana/kibana:latest
    container_name: kibana
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - bookstore_network

networks:
  bookstore_network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
